Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"373b4801-99b9-4c79-9707-542d775540bc\" name=\"Changes\" comment=\"Framework and some code\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"Framework\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2IqsciycFhDFpbQF0h860FEUOVC\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\r\n    \"WebServerToolWindowFactoryState\": \"false\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.detected.package.tslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"settings.editor.selected.configurable\": \"project.propVCSSupport.DirectoryMappings\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RunManager\" selected=\"Application.Gui\">\r\n    <configuration name=\"Gui\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Gui\" />\r\n      <module name=\"TicTacToeProject\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"TicTacToe\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"TicTacToe\" />\r\n      <module name=\"TicTacToeProject\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Gui\" />\r\n        <item itemvalue=\"Application.TicTacToe\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"373b4801-99b9-4c79-9707-542d775540bc\" name=\"Changes\" comment=\"\" />\r\n      <created>1670920530218</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1670920530218</updated>\r\n      <workItem from=\"1670920531366\" duration=\"6954000\" />\r\n    </task>\r\n    <task id=\"LOCAL−00001\" summary=\"Initial\">\r\n      <created>1670920584460</created>\r\n      <option name=\"number\" value=\"LOCAL−00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL−00001\" />\r\n      <updated>1670920584460</updated>\r\n    </task>\r\n    <task id=\"LOCAL−00002\" summary=\"Initial\">\r\n      <created>1670928217639</created>\r\n      <option name=\"number\" value=\"LOCAL−00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL−00002\" />\r\n      <updated>1670928217639</updated>\r\n    </task>\r\n    <task id=\"LOCAL−00003\" summary=\"Framework and some code\">\r\n      <created>1670933180129</created>\r\n      <option name=\"number\" value=\"LOCAL−00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL−00003\" />\r\n      <updated>1670933180129</updated>\r\n    </task>\r\n    <task id=\"LOCAL−00004\" summary=\"Framework and some code\">\r\n      <created>1670933187688</created>\r\n      <option name=\"number\" value=\"LOCAL−00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL−00004\" />\r\n      <updated>1670933187688</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"5\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <ignored-roots>\r\n      <path value=\"$PROJECT_DIR$\" />\r\n    </ignored-roots>\r\n    <MESSAGE value=\"Initial\" />\r\n    <MESSAGE value=\"Framework and some code\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Framework and some code\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 333cd2d7745f3833694fd9b5297a032ee8c3d274)
+++ b/.idea/workspace.xml	(date 1670939965070)
@@ -4,7 +4,10 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="373b4801-99b9-4c79-9707-542d775540bc" name="Changes" comment="Framework and some code" />
+    <list default="true" id="373b4801-99b9-4c79-9707-542d775540bc" name="Changes" comment="Framework and some code">
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Gui.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Gui.java" afterDir="false" />
+    </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
@@ -78,7 +81,7 @@
       <option name="number" value="Default" />
       <option name="presentableId" value="Default" />
       <updated>1670920530218</updated>
-      <workItem from="1670920531366" duration="6954000" />
+      <workItem from="1670920531366" duration="9813000" />
     </task>
     <task id="LOCAL−00001" summary="Initial">
       <created>1670920584460</created>
@@ -104,7 +107,13 @@
       <option name="presentableId" value="LOCAL−00004" />
       <updated>1670933187688</updated>
     </task>
-    <option name="localTasksCounter" value="5" />
+    <task id="LOCAL−00005" summary="Framework and some code">
+      <created>1670933231020</created>
+      <option name="number" value="LOCAL−00005" />
+      <option name="presentableId" value="LOCAL−00005" />
+      <updated>1670933231020</updated>
+    </task>
+    <option name="localTasksCounter" value="6" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
Index: src/Gui.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import javax.swing.*;\r\nimport java.awt.*;\r\nimport java.awt.event.ActionEvent;\r\nimport java.awt.event.ActionListener;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class Gui extends JFrame {\r\n\r\n    GameController controller =  new GameController();\r\n    JPanel groundPanel = new JPanel(new BorderLayout());\r\n    JPanel gamePanel = new JPanel(new GridLayout(3,3));\r\n    JPanel bottomPanel = new JPanel(new GridLayout(1,2));\r\n    JLabel infoField = new JLabel();\r\n    JLabel playerinfo = new JLabel();\r\n    JButton newGameButton = new JButton(\"New game\");\r\n    JButton giveUpButton = new JButton(\"Give up!\");\r\n\r\n    JButton[] buttonArr = new JButton[9];\r\n\r\n    JButton button1 = new JButton();\r\n    JButton button2 = new JButton();\r\n    JButton button3 = new JButton();\r\n    JButton button4 = new JButton();\r\n    JButton button5 = new JButton();\r\n    JButton button6 = new JButton();\r\n    JButton button7 = new JButton();\r\n    JButton button8 = new JButton();\r\n    JButton button9 = new JButton();\r\n    List<JButton> listOfButton = List.of(button1, button2, button3, button4,button5,button6,button7,button8,button9);\r\n\r\n    Gui(){\r\n        playerinfo.setText(controller.playerX.getPlayerName() + \" is \" + controller.playerX.getPlayerMark() +\r\n                \" and \" + controller.playerO.getPlayerName() + \" is \" + controller.playerO.getPlayerMark());\r\n\r\n        setUpButton();\r\n\r\n\r\n        groundPanel.add(gamePanel, BorderLayout.CENTER);\r\n        groundPanel.add(playerinfo, BorderLayout.NORTH);\r\n        bottomPanel.add(newGameButton);\r\n        bottomPanel.add(giveUpButton);\r\n        groundPanel.add(bottomPanel, BorderLayout.SOUTH);\r\n        add(groundPanel);\r\n\r\n        button1.addActionListener(e -> {controller.placeMark(0,0);\r\n            button1.setEnabled(false);\r\n        });\r\n\r\n        setLocationRelativeTo(null);\r\n        setVisible(true);\r\n        setSize(300,300);\r\n        setDefaultCloseOperation(EXIT_ON_CLOSE);\r\n\r\n    }\r\n\r\n    public void setUpButton(){\r\n        for (int i = 0; i < listOfButton.size(); i++) {\r\ngamePanel.add(listOfButton.get(i));\r\nlistOfButton.get(i).addActionListener(this) {\r\n});\r\n        }\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        new Gui();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Gui.java b/src/Gui.java
--- a/src/Gui.java	(revision 333cd2d7745f3833694fd9b5297a032ee8c3d274)
+++ b/src/Gui.java	(date 1670936940352)
@@ -5,12 +5,12 @@
 import java.util.ArrayList;
 import java.util.List;
 
-public class Gui extends JFrame {
+public class Gui extends JFrame implements ActionListener {
 
-    GameController controller =  new GameController();
+    GameController controller = new GameController();
     JPanel groundPanel = new JPanel(new BorderLayout());
-    JPanel gamePanel = new JPanel(new GridLayout(3,3));
-    JPanel bottomPanel = new JPanel(new GridLayout(1,2));
+    JPanel gamePanel = new JPanel(new GridLayout(3, 3));
+    JPanel bottomPanel = new JPanel(new GridLayout(1, 2));
     JLabel infoField = new JLabel();
     JLabel playerinfo = new JLabel();
     JButton newGameButton = new JButton("New game");
@@ -18,18 +18,18 @@
 
     JButton[] buttonArr = new JButton[9];
 
-    JButton button1 = new JButton();
-    JButton button2 = new JButton();
-    JButton button3 = new JButton();
-    JButton button4 = new JButton();
-    JButton button5 = new JButton();
-    JButton button6 = new JButton();
-    JButton button7 = new JButton();
-    JButton button8 = new JButton();
-    JButton button9 = new JButton();
-    List<JButton> listOfButton = List.of(button1, button2, button3, button4,button5,button6,button7,button8,button9);
+//    JButton button1 = new JButton();
+//    JButton button2 = new JButton();
+//    JButton button3 = new JButton();
+//    JButton button4 = new JButton();
+//    JButton button5 = new JButton();
+//    JButton button6 = new JButton();
+//    JButton button7 = new JButton();
+//    JButton button8 = new JButton();
+//    JButton button9 = new JButton();
+//    List<JButton> listOfButton = List.of(button1, button2, button3, button4, button5, button6, button7, button8, button9);
 
-    Gui(){
+    Gui() {
         playerinfo.setText(controller.playerX.getPlayerName() + " is " + controller.playerX.getPlayerMark() +
                 " and " + controller.playerO.getPlayerName() + " is " + controller.playerO.getPlayerMark());
 
@@ -43,26 +43,38 @@
         groundPanel.add(bottomPanel, BorderLayout.SOUTH);
         add(groundPanel);
 
-        button1.addActionListener(e -> {controller.placeMark(0,0);
+        button1.addActionListener(e -> {
+            controller.placeMark(0, 0);
             button1.setEnabled(false);
         });
 
         setLocationRelativeTo(null);
         setVisible(true);
-        setSize(300,300);
+        setSize(300, 300);
         setDefaultCloseOperation(EXIT_ON_CLOSE);
 
     }
 
-    public void setUpButton(){
-        for (int i = 0; i < listOfButton.size(); i++) {
-gamePanel.add(listOfButton.get(i));
-listOfButton.get(i).addActionListener(this) {
-});
+    public void setUpButton() {
+        for (int i = 0; i < 9; i++) {
+            buttonArr[i] = new JButton();
+            gamePanel.add(buttonArr[i]);
+            buttonArr[i].addActionListener(this);
         }
     }
 
     public static void main(String[] args) {
         new Gui();
     }
+
+    @Override
+    public void actionPerformed(ActionEvent e) {
+
+        if (controller.currentPlayer.getPlayerMark() == 'X'){
+            JButton temp = (JButton) e.getSource();
+
+        } else {
+
+        }
+    }
 }
